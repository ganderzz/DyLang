/* @dylang 1.0.0 */
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.dylang=r()}(this,function(){"use strict";function e(r){switch(r.type){case"Program":return r.body.map(e).join("");case"ExpressionStatement":return e(r.expression);case"CallExpression":return e(r.callee)+"("+r.arguments.map(e)+")";case"Assignment":return e(r.expression);case"Variable":return r.value.length>0?"var "+e(r.name)+" = "+r.value.map(e).join(" ")+"\n":e(r.name);case"Scope":return r.value.map(e).join(", ");case"Identifier":return r.name;case"NumberLiteral":case"Operator":return r.value;case"StringLiteral":return'"'+r.value+'"'}}function r(e){function r(){var n=e[t];switch(n.type){case"number":return t++,{type:"NumberLiteral",token:n.value};case"string":return t++,{type:"StringLiteral",token:n.value};case"operator":return t++,{type:"Operator",token:n.value};case"variable":var a={type:"Variable",name:n.value,value:[]};if("assignment"===(n=e[++t]).type){for(n=e[++t];"end"!==n.type;)a.value.push(r()),n=e[t];t++}return a;case"paren":if("("===n.value){var i={type:"CallExpression",name:(n=e[++t]).value,params:[]};for(n=e[++t];"paren"!==n.type||"paren"===n.type&&")"!==n.value||"end"===n.type;)i.params.push(r()),n=e[t];return t++,i}case"end":return void t++}throw new TypeError("Invalid Type: "+n.type)}var t=0;console.error(e);for(var n={type:"Program",body:[]};t<e.length;)n.body.push(r());return n}function t(e,r){function t(e,r){e.forEach(function(e){n(e,r)})}function n(e,n){if(e){var a=r[e.type];switch(a&&a.enter&&a.enter(e,n),e.type){case"Program":t(e.body,e);break;case"CallExpression":t(e.params,e);break;case"Scope":case"Variable":t(e.value,e);break;case"StringLiteral":case"NumberLiteral":case"Operator":break;default:throw new TypeError(e+" is invalid in traverser")}a&&a.exit&&a.exit(e,n)}}n(e,null)}function n(e){var r={type:"Program",body:[]};return e._context=r.body,t(e,{NumberLiteral:{enter:function(e,r){r._context.push({type:"NumberLiteral",value:e.token})}},StringLiteral:{enter:function(e,r){r._context.push({type:"StringLiteral",value:e.token})}},Operator:{enter:function(e,r){r._context.push({type:"Operator",value:e.token})}},Variable:{enter:function(e,r){var t={type:"Variable",name:{type:"Identifier",name:e.name},value:[]};e._context=t.value,"CallExpression"!==e.value&&(t={type:"Assignment",expression:t}),e.value||(t={type:"Variable",name:e.name}),r._context.push(t)}},CallExpression:{enter:function(e,r){var t={type:"CallExpression",callee:{type:"Identifier",name:e.name},arguments:[]};e._context=t.arguments,"CallExpression"!==r.type&&(t={type:"ExpressionStatement",expression:t}),r._context.push(t)}},Scope:{enter:function(e,r){var t={type:"Scope",value:[]};e._context=t.value,r._context.push(t)}}}),r}function a(e){for(var r=[],t=e.split("\n"),n=!1,a=t.length,i=0;i<a;i++){for(var o=t[i].length,s=0,u=0;s<o;){var l=t[i][s];if(n&&"#"!==l)s++;else if(n&&"#"===l)n=!1,s++;else{if("#"===l){if("#"===t[i][++s]){s++,n=!0;continue}break}if(/\s/.test(l))s++;else if(/[0-9]/.test(l)){var p=t[i][s];for(s++;/[0-9]/.test(t[i][s]);)p+=t[i][s],s++;r.push({type:"number",value:parseInt(p,10)})}else if("$"!==l)if("="!==l)if("'"!==l)if("("!==l)if(")"!==l){var c=/[a-z\.]/i;if(c.test(l)){for(var v=l;c.test(t[i][++s]);)v+=t[i][s];r.push({type:"name",value:v})}else{var f=/[\+\-\*\/\%]/i;if(!l.match(f))throw new TypeError("Invalid symbol "+t[i][s]+" given on line "+(i+1)+":"+s);s++,r.push({type:"operator",value:l})}}else{if(0===u)throw new Error("Expecting ( on line "+(i+1)+":"+s);s++,u--,r.push({type:"paren",value:l})}else s++,u++,r.push({type:"paren",value:l});else{for(var y="";"'"!==t[i][++s];){if(s>=o)throw new SyntaxError("Expecting a closing ' on line "+(i+1)+":"+s);y+=t[i][s]}s++,r.push({type:"string",value:y})}else{if("variable"!==r[r.length-1].type)throw new Error("Cannot assign value on line "+(i+1)+":"+s);s++,r.push({type:"assignment"})}else{var m="";for(s++;s<o&&/[a-z]/i.test(t[i][s]);)console.error(s,o),m+=t[i][s],s++;if(!m)throw new Error("Undeclared variable being used on line "+(i+1)+":"+s);r.push({type:"variable",value:m})}}}r.push({type:"end"})}if(n)throw new Error("A multi-line comment was started, but never closed");return r}return function(t){return e(n(r(a(t))))}});
